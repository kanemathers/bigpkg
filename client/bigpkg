#!/bin/sh

CWD=${CWD:=/etc/bigpkg}
STAGE=${STAGE:=/tmp/bigpkg}
PREFIX=${PREFIX:=/}

INDEX_LOCAL="${CWD}/local.db"
INDEX_REMOTE="${CWD}/remote.db"

PKG_DIR="${STAGE}/pkg"
BUILD_DIR="${STAGE}/build"
LOCKFILE="${STAGE}/bigpkg.lock"

if [ -z "${SERVER}" ]; then
    echo 'error: unset variable SERVER' >&2

    exit 1
fi

__IMPORTED=""
HERE=$(dirname $0)

import()
{
    local lib=$1
    local path

    [ -n "${lib}" ] || return 1

    path="${HERE}/lib/${lib}.sh"

    if $(echo -e "${__IMPORTED}" | grep -q "^${lib}"); then
        return 1
    fi

    if [ ! -r "${path}" ]; then
        return 1
    fi

    source $path

    __IMPORTED="${__IMPORTED}\n${lib}"
}

import "index"
import "packages"
import "net"

at_exit()
{
    rm -rf "${LOCKFILE}"
    rm -rf "${STAGE}"
}

mkdir -p $CWD || exit 1
mkdir -p $STAGE || exit 1
mkdir -p $PKG_DIR || exit 1
mkdir -p $BUILD_DIR || exit 1

mkdir -p "${CWD}/pkgs"

touch $INDEX_LOCAL
touch $INDEX_REMOTE

if ! mkdir "${LOCKFILE}" 2>/dev/null; then
    echo "error: already running" >&2

    exit
fi

trap "at_exit; exit" INT TERM EXIT

if [ $# -lt 1 ]; then
    echo "Usage: bigpkg [install|remove|update|upgrade]"

    exit 1
fi

case $1 in
    install)
        if [ -z "$2" ]; then
            echo "error: no target specified" >&2

            exit 1
        fi

        package_install $2 || exit 1
        ;;

    remove)
        if [ -z "$2" ]; then
            echo "error: no target specified" >&2

            exit 1
        fi

        package_remove $2 || exit 1
        ;;

    update)
        index_update || exit 1
        ;;

    upgrade)
        package_upgrade || exit 1
        ;;

esac
